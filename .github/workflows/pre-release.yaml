# Workflow to fetch the latest commit hash on the main branch and upload artifacts to CF storage.
name: Build and upload from main
on:
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  define-matrix:
    name: Define Matrix
    runs-on: blacksmith-2vcpu-ubuntu-2204
    outputs:
      releases: ${{ steps.prepare-matrix.outputs.releases }}
      commit_hash: ${{ steps.get-commit-hash.outputs.hash }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Get latest commit hash
        id: get-commit-hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Prepare JSON output for matrix
        id: prepare-matrix
        run: |
          RELEASES_JSON=$(find contracts -maxdepth 1 -mindepth 1 -type d | sed 's|contracts/||' | jq -R . | jq -s --arg commit "${{ steps.get-commit-hash.outputs.hash }}" 'map({
            package_name: .,
            version: $commit,
            package_git_tag: "\(.)_\($commit)"
          })')
          echo "releases=$(echo "$RELEASES_JSON" | jq -c)" >> "$GITHUB_OUTPUT"

  build:
    needs: define-matrix
    uses: ./.github/workflows/reusable-build.yaml
    with:
      commit-hash: ${{ needs.define-matrix.outputs.commit_hash }}

  upload:
    needs: [define-matrix, build]
    strategy:
      matrix:
        releases: ${{ fromJson(needs.define-matrix.outputs.releases) }}

    uses: ./.github/workflows/reusable-upload.yaml
    permissions:
      id-token: write
      contents: read
    with:
      package-name: ${{ matrix.releases.package_name }}
      package-version: ${{ matrix.releases.version }}
      package-git-tag: ${{ matrix.releases.package_git_tag }}
      artifact-name: ${{ needs.build.outputs.artifact-name }}
      cf-bucket-name: ${{ vars.CF_BUCKET_NAME }}
      cf-config-bucket-root-key: ${{ vars.CF_BUCKET_ROOT_KEY }}
      github-release: false
    secrets:
      github-token: ${{ secrets.PAT_TOKEN }}
      cf-endpoint-url: ${{ secrets.CF_ENDPOINT_URL }}
      cf-bucket-access-key-id: ${{ secrets.CF_BUCKET_ACCESS_KEY_ID }}
      cf-bucket-secret-access-key: ${{ secrets.CF_BUCKET_SECRET_ACCESS_KEY }}
